@model MVCDemo.Models.Registration


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> country = new List<SelectListItem>();
    country.Add(new SelectListItem() { Text = "India", Value = "India" });
    country.Add(new SelectListItem() { Text = "United States", Value = "United States" });
    country.Add(new SelectListItem() { Text = "Russia", Value = "Russia" });
    country.Add(new SelectListItem() { Text = "Mexico", Value = "Mexico" });
    country.Add(new SelectListItem() { Text = "Spain", Value = "Spain" });

    List<SelectListItem> month = new List<SelectListItem>();
    month.Add(new SelectListItem() { Text = "January", Value = "January" });
    month.Add(new SelectListItem() { Text = "February", Value = "February" });
    month.Add(new SelectListItem() { Text = "March", Value = "March" });
    month.Add(new SelectListItem() { Text = "April", Value = "April" });
    month.Add(new SelectListItem() { Text = "May", Value = "May" });
    month.Add(new SelectListItem() { Text = "June", Value = "June" });
    month.Add(new SelectListItem() { Text = "July", Value = "July" });
    month.Add(new SelectListItem() { Text = "August", Value = "August" });
    month.Add(new SelectListItem() { Text = "September", Value = "September" });
    month.Add(new SelectListItem() { Text = "October", Value = "October" });
    month.Add(new SelectListItem() { Text = "November", Value = "November" });
    month.Add(new SelectListItem() { Text = "December", Value = "December" });


    List<SelectListItem> gender = new List<SelectListItem>();
    gender.Add(new SelectListItem() { Text = "Male", Value = "Male" });
    gender.Add(new SelectListItem() { Text = "Female", Value = "Female" });
    gender.Add(new SelectListItem() { Text = "Other", Value = "Other" });
    gender.Add(new SelectListItem() { Text = "Rather not say", Value = "Rather not say" });

    List<SelectListItem> questions = new List<SelectListItem>();
    questions.Add(new SelectListItem() { Text = "What is your pet's name", Value = "What is your pet's name" });
    questions.Add(new SelectListItem() { Text = "what was your first cat name", Value = "what was your first cat name" });
    questions.Add(new SelectListItem() { Text = "who is your favourite author", Value = "who is your favourite author" });
    questions.Add(new SelectListItem() { Text = "who is your favourite actor", Value = "who is your favourite actor" });
    questions.Add(new SelectListItem() { Text = "what is your nick name", Value = "what is your nick name" });


}

<!DOCTYPE html>

<html>
<head>
    <title>Create</title>
</head>
<body>

    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Status != null)
        {
            <div class="alert alert-success">
                <strong>Success!</strong>@ViewBag.Message
            </div>
        }
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="container-fluid">

                <div class="row">
                    <div class="col-lg-8 hidden-sm">
                        <h1 class="uraccount">Create your account</h1>
                        <img class="img-responsive Imagelogo" src="~/Images/Image1.jpg" alt="Chania" width="460" height="345" />
                    </div>

                    <div class="col-lg-4 col-sm-12">
                        <div>

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-lg-12" })

                                <div class="col-lg-6">
                                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", placeholder = "FirstName", @required = "required" } })

                                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-6">
                                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", placeholder = "LastName", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email_username, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.EditorFor(model => model.Email_username, new { htmlAttributes = new { @class = "form-control inputtextbox", placeholder = "Email Id", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Email_username, "", new { @class = "text-danger" })
                                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control inputtextbox", placeholder = "password", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Confirmpassword, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.PasswordFor(model => model.Confirmpassword, new { @class = "form-control inputtextbox", placeholder = "Confirm password" })
                                    @Html.ValidationMessageFor(model => model.Confirmpassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.DropDownList("Month", month, "Select month", new { @class = "form-control inputtextbox" })
                                    @* @Html.DropDownList("Month", (IEnumerable<SelectListItem>)ViewBag.Items, "Select month", new { @class = "form-control inputtextbox" })*@
                                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @* @Html.EditorFor(model => model.Day, new { htmlAttributes = new { @class = "form-control inputtextbox", placeholder = "Day" } })*@
                                    @Html.DropDownListFor(m => m.Day, Enumerable.Range(1, 31).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), "Select Day", new { @class = "form-control inputtextbox", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.DropDownListFor(m => m.year, Enumerable.Range(0, (DateTime.Now.Year - 1979)).Select(i => new SelectListItem { Text = (DateTime.Now.Year - i).ToString(), Value = i.ToString() }), "Select Year", new { @class = "form-control inputtextbox", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.DropDownList("Gender", gender, "Select Gender", new { @class = "form-control inputtextbox", @required = "required" })
                                    @*  @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control inputtextbox" } })*@
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.DropDownList("Country", country, "Select Country", new { @class = "form-control inputtextbox", @required = "required" })
                                    @*@Html.DropDownList("Country", (IEnumerable<SelectListItem>)ViewBag.country, "Select Country", new { @class = "form-control inputtextbox" })*@
                                    @*@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.DropDownList("Question", questions, "Select Question", new { @class = "form-control inputtextbox", @required = "required" })
                                    @* @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-lg-12" })
                                <div class="col-lg-12">
                                    @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control inputtextbox", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-lg-12 Submitbuttoncss">
                                    <input type="submit" class="btn btn-primary col-lg-5" value="Create">
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            

            if(ViewBag.Status !=null)
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong>@ViewBag.Message
                </div> 
            }
        }
    }

</body>

</html>
